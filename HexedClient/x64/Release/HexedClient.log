Core\GUI.cpp(113,61): : warning : if statement has empty body [-Wempty-body]
                  if (ImGui::Checkbox("Auto Sprint", &Settings::AutoSprint));
                                                                            ^
  Core\GUI.cpp(113,61): note: put the semicolon on a separate line to silence this warning
Core\GUI.cpp(118,62): : warning : if statement has empty body [-Wempty-body]
                  if (ImGui::Checkbox("Autoclicker", &Settings::Autoclicker));
                                                                             ^
  Core\GUI.cpp(118,62): note: put the semicolon on a separate line to silence this warning
Core\GUI.cpp(119,94): : warning : if statement has empty body [-Wempty-body]
                  if (Settings::Autoclicker) if (ImGui::SliderInt("CPS", &Settings::AutoclickerCount, 1, 20));
                                                                                                             ^
  Core\GUI.cpp(119,94): note: put the semicolon on a separate line to silence this warning
Core\GUI.cpp(121,62): : warning : if statement has empty body [-Wempty-body]
                  if (ImGui::Checkbox("No Hit Delay", &Settings::NoHitDelay));
                                                                             ^
  Core\GUI.cpp(121,62): note: put the semicolon on a separate line to silence this warning
Core\GUI.cpp(123,66): : warning : if statement has empty body [-Wempty-body]
                  if (ImGui::Checkbox("No Build Delay", &Settings::NoBuildDelay));
                                                                                 ^
  Core\GUI.cpp(123,66): note: put the semicolon on a separate line to silence this warning
Core\GUI.cpp(125,69): : warning : if statement has empty body [-Wempty-body]
                  if (ImGui::Checkbox("Hitbox Extender", &Settings::HitBoxExtender));
                                                                                    ^
  Core\GUI.cpp(125,69): note: put the semicolon on a separate line to silence this warning
Core\GUI.cpp(128,66): : warning : if statement has empty body [-Wempty-body]
                          if (ImGui::SliderFloat("Width", &Settings::HitBoxWidth, 0, 3));
                                                                                        ^
  Core\GUI.cpp(128,66): note: put the semicolon on a separate line to silence this warning
Core\GUI.cpp(129,68): : warning : if statement has empty body [-Wempty-body]
                          if (ImGui::SliderFloat("Height", &Settings::HitBoxHeight, 0, 3));
                                                                                          ^
  Core\GUI.cpp(129,68): note: put the semicolon on a separate line to silence this warning
Core\GUI.cpp(135,55): : warning : if statement has empty body [-Wempty-body]
                  if (ImGui::Checkbox("Anti Bot", &Settings::AntiBot));
                                                                      ^
  Core\GUI.cpp(135,55): note: put the semicolon on a separate line to silence this warning
Core\GUI.cpp(138,65): : warning : if statement has empty body [-Wempty-body]
                          if (ImGui::Checkbox("Name Flag", &Settings::AntiBotNameFlag));
                                                                                       ^
  Core\GUI.cpp(138,65): note: put the semicolon on a separate line to silence this warning
Core\GUI.cpp(139,65): : warning : if statement has empty body [-Wempty-body]
                          if (ImGui::Checkbox("Ping Flag", &Settings::AntiBotPingFlag));
                                                                                       ^
  Core\GUI.cpp(139,65): note: put the semicolon on a separate line to silence this warning
Core\GUI.cpp(140,76): : warning : if statement has empty body [-Wempty-body]
                          if (ImGui::Checkbox("Risky Ping Flag", &Settings::AntiBotRiskyPingFlag));
                                                                                                  ^
  Core\GUI.cpp(140,76): note: put the semicolon on a separate line to silence this warning
Core\GUI.cpp(141,65): : warning : if statement has empty body [-Wempty-body]
                          if (ImGui::Checkbox("UUID Flag", &Settings::AntiBotUUIDFlag));
                                                                                       ^
  Core\GUI.cpp(141,65): note: put the semicolon on a separate line to silence this warning
Core\GUI.cpp(147,61): : warning : if statement has empty body [-Wempty-body]
                  if (ImGui::Checkbox("Frame Spoof", &Settings::FrameSpoof));
                                                                            ^
  Core\GUI.cpp(147,61): note: put the semicolon on a separate line to silence this warning
Core\GUI.cpp(148,101): : warning : if statement has empty body [-Wempty-body]
                  if (Settings::FrameSpoof) if (ImGui::SliderInt("Frames", &Settings::FrameSpoofValue, -1337, 1337));
                                                                                                                    ^
  Core\GUI.cpp(148,101): note: put the semicolon on a separate line to silence this warning
Core\GUI.cpp(150,59): : warning : if statement has empty body [-Wempty-body]
                  if (ImGui::Checkbox("Ping Spoof", &Settings::PingSpoof));
                                                                          ^
  Core\GUI.cpp(150,59): note: put the semicolon on a separate line to silence this warning
Core\GUI.cpp(151,100): : warning : if statement has empty body [-Wempty-body]
                  if (Settings::PingSpoof) if (ImGui::SliderInt("Latency", &Settings::PingSpoofValue, -1337, 1337));
                                                                                                                   ^
  Core\GUI.cpp(151,100): note: put the semicolon on a separate line to silence this warning
Core\GUI.cpp(153,53): : warning : if statement has empty body [-Wempty-body]
                  if (ImGui::Checkbox("No Fire", &Settings::NoFire));
                                                                    ^
  Core\GUI.cpp(153,53): note: put the semicolon on a separate line to silence this warning
Core\GUI.cpp(155,59): : warning : if statement has empty body [-Wempty-body]
                  if (ImGui::Checkbox("Player ESP", &Settings::PlayerESP));
                                                                          ^
  Core\GUI.cpp(155,59): note: put the semicolon on a separate line to silence this warning
Core\GUI.cpp(160,65): : warning : if statement has empty body [-Wempty-body]
                  if (ImGui::Checkbox("Murder Expose", &Settings::MurderExpose));
                                                                                ^
  Core\GUI.cpp(160,65): note: put the semicolon on a separate line to silence this warning
Core\GUI.cpp(177,14): : warning : format string is not a string literal (potentially insecure) [-Wformat-security]
          ImGui::Text(("FPS: " + std::to_string(Settings::DebugFPS) + " Ping: " + std::to_string(Settings::DebugPing)).c_str());
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  Core\GUI.cpp(177,14): note: treat the string as an argument to avoid this
          ImGui::Text(("FPS: " + std::to_string(Settings::DebugFPS) + " Ping: " + std::to_string(Settings::DebugPing)).c_str());
                      ^
                      "%s", 
Core\GUI.cpp(196,23): : warning : format string is not a string literal (potentially insecure) [-Wformat-security]
                          ImGui::TextWrapped(logs[i].c_str());
                                             ^~~~~~~~~~~~~~~
  Core\GUI.cpp(196,23): note: treat the string as an argument to avoid this
                          ImGui::TextWrapped(logs[i].c_str());
                                             ^
                                             "%s", 
  22 warnings generated.
Core\Handler.cpp(5,40): : warning : extra tokens at end of #include directive [-Wextra-tokens]
  #include "../Wrapper/ClientConsole.hpp";
                                         ^
                                         //
  1 warning generated.
Core\Modules\MurderExpose.cpp(79,27): : warning : illegal character encoding in string literal [-Winvalid-source-encoding]
                  if (!ItemName.contains("<A7>a")) continue;
                                          ^~~~
  1 warning generated.
Core\Patching.cpp(54,26): : warning : implicit conversion between pointer-to-function and pointer-to-object is a Microsoft extension [-Wmicrosoft-cast]
                  status = MH_CreateHook(patchedOnUpdate, &OnUpdatePatch, (void**)(&originalOnUpdate));
                                         ^~~~~~~~~~~~~~~
Core\Patching.cpp(54,43): : warning : implicit conversion between pointer-to-function and pointer-to-object is a Microsoft extension [-Wmicrosoft-cast]
                  status = MH_CreateHook(patchedOnUpdate, &OnUpdatePatch, (void**)(&originalOnUpdate));
                                                          ^~~~~~~~~~~~~~
Core\Patching.cpp(74,26): : warning : implicit conversion between pointer-to-function and pointer-to-object is a Microsoft extension [-Wmicrosoft-cast]
                  status = MH_CreateHook(patchedOnTick, &OnTickPatch, (void**)(&originalOnTick));
                                         ^~~~~~~~~~~~~
Core\Patching.cpp(74,41): : warning : implicit conversion between pointer-to-function and pointer-to-object is a Microsoft extension [-Wmicrosoft-cast]
                  status = MH_CreateHook(patchedOnTick, &OnTickPatch, (void**)(&originalOnTick));
                                                        ^~~~~~~~~~~~
Core\Patching.cpp(97,26): : warning : implicit conversion between pointer-to-function and pointer-to-object is a Microsoft extension [-Wmicrosoft-cast]
                  status = MH_CreateHook(patchedSetSprinting, &SetSprintingPatch, (void**)(&originalSetSprinting));
                                         ^~~~~~~~~~~~~~~~~~~
Core\Patching.cpp(97,47): : warning : implicit conversion between pointer-to-function and pointer-to-object is a Microsoft extension [-Wmicrosoft-cast]
                  status = MH_CreateHook(patchedSetSprinting, &SetSprintingPatch, (void**)(&originalSetSprinting));
                                                              ^~~~~~~~~~~~~~~~~~
Core\Patching.cpp(111,26): : warning : implicit conversion between pointer-to-function and pointer-to-object is a Microsoft extension [-Wmicrosoft-cast]
                  status = MH_CreateHook(patchedSwapBuffers, &SwapBuffersPatch, (LPVOID*)&originalSwapBuffers);
                                         ^~~~~~~~~~~~~~~~~~
Core\Patching.cpp(111,46): : warning : implicit conversion between pointer-to-function and pointer-to-object is a Microsoft extension [-Wmicrosoft-cast]
                  status = MH_CreateHook(patchedSwapBuffers, &SwapBuffersPatch, (LPVOID*)&originalSwapBuffers);
                                                             ^~~~~~~~~~~~~~~~~
  8 warnings generated.
ImGui\imgui.cpp(7103,20): : warning : unused function 'GetInputSourceName' [-Wunused-function]
  static const char* GetInputSourceName(ImGuiInputSource source)
                     ^
ImGui\imgui.cpp(11475,13): : warning : unused function 'RenderViewportsThumbnails' [-Wunused-function]
  static void RenderViewportsThumbnails()
              ^
ImGui\imgui.cpp(11533,13): : warning : unused function 'MetricsHelpMarker' [-Wunused-function]
  static void MetricsHelpMarker(const char* desc)
              ^
ImGui\imgui.cpp(11685,12): : warning : unused function 'StackToolFormatLevelInfo' [-Wunused-function]
  static int StackToolFormatLevelInfo(ImGuiStackTool* tool, int n, bool format_for_ui, char* buf, size_t buf_size)
             ^
  4 warnings generated.
ImGui\imgui_widgets.cpp(425,17): : warning : format string is not a string literal (potentially insecure) [-Wformat-security]
      ImGui::Text(text);
                  ^~~~
  ImGui\imgui_widgets.cpp(425,17): note: treat the string as an argument to avoid this
      ImGui::Text(text);
                  ^
                  "%s", 
ImGui\imgui_widgets.cpp(438,17): : warning : format string is not a string literal (potentially insecure) [-Wformat-security]
      ImGui::Text(text);
                  ^~~~
  ImGui\imgui_widgets.cpp(438,17): note: treat the string as an argument to avoid this
      ImGui::Text(text);
                  ^
                  "%s", 
  2 warnings generated.
lld-link: : error : undefined symbol: __movsb
  >>> referenced by trampoline.c
  >>>               x64\Release\trampoline.obj
